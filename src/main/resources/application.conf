akka {

  loggers = [akka.event.slf4j.Slf4jLogger]
  loglevel = INFO

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    debug {
      # enable function of Actor.loggable(), which is to log any received message
      # at DEBUG level, see the “Testing Actor Systems” section of the Akka
      # Documentation at http://akka.io/docs
      receive = off

      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = off

      # enable DEBUG logging of actor lifecycle changes
      lifecycle = off

      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = off

      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = off

      # enable DEBUG logging of unhandled messages
      unhandled = off

      # enable WARN logging of misconfigured routers
      router-misconfiguration = off
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }
  cluster {
    seed-nodes = [
      "akka.tcp://cqrs-activator@127.0.0.1:2551"]

    auto-down-unreachable-after = 10s
  }

  persistence {
    view.auto-update-interval = 2 seconds
    journal {
      plugin = "akka.persistence.journal.leveldb-shared"
      leveldb-shared.store {
        dir = "target/shared"
        native = off
      }
    }
    snapshot-store.local {
      dir = "target/snapshots"
    }
  }
}

cqrs {
  maxOrderPrice = 100.00
  orderReceiveTimeout = 30 seconds
}